#include <iostream>
#include <unordered_set>
#include <vector>
#include <string>
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>
#include <memory>

using namespace std;

/*
    shared_ptr test
*/
// A sample function f1() that throws an int exception 
void f1() throw (int) {
  cout<<"\n f1() Start ";
  shared_ptr<int> t(new int);
  cout << t << endl;
  throw 100;
  cout<<"\n f1() End "; 
}
 
// Another sample function f2() that calls f1()
void f2() throw (int) {
  cout<<"\n f2() Start ";
  f1();
  cout<<"\n f2() End ";
}
  
// Another sample function f3() that calls f2() and handles exception thrown by f1()
void f3() {
  cout<<"\n f3() Start ";
  try {
    f2();
  }
  catch(int i) {
   cout<<"\n Caught Exception: "<<i;
  }
  cout<<"\n f3() End";
}
 
// A driver function to demonstrate Stack Unwinding  process
int main() {
  f3();
  shared_ptr<int> t(new int);
  cout << "\n" << t << endl;  
  getchar();
  return 0;
} 