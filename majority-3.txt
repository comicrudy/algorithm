#include <iostream>
#include <vector>
#include <unordered_set>
#include <algorithm>
#include <unordered_map>
#include <stdio.h>
#include <string>
#include <deque>
#include <map>
#include <queue>
#include <functional>
#include <utility>
#include <set>

using namespace std;

/*
    Majority Number III
    Given an array of integers and a number k, the majority number is the number that occursmore than 1/k of the size of the array. Find it.

    Note
    There is only one majority number in the array.

    Example
    For [3,1,2,3,2,3,3,4,4,4] and k = 3, return 3
*/

int majority(vector<int>& nums, int k){
    unordered_map<int, int> M;
    int size = nums.size(), index = 0, max_num = 0;
    for(int i = 0; i < size; ++i){
        if(M.count(nums[i]))
            ++M[nums[i]];
        else {
            if(M.size() < k)
                M[nums[i]] = 1;
            else {
                auto it = M.begin();
                while(it != M.end()){
                    if(it->second == 1){
                        M.erase(it++);
//                        (--(++it));
                    }
                    else {
                        ++it;
                    }
                }
            }
                
        }
    }
    for(auto it = M.begin(); it != M.end(); ++it){
        if(it->second > max_num){
            index = it->first;
            max_num = it->second;
        }
    }
    return index;   
}

int main(){
    vector<int> nums = {3,1,2,3,2,3,3,4,4,4};
    int k = 3;
    cout << majority(nums, k) << endl;
    return 0;
}

