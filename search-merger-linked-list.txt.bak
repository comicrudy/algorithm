#include <iostream>
#include <vector>
#include <unordered_set>
#include <algorithm>
#include <unordered_map>
#include <stdio.h>
#include <string.h>
#include <string>
#include <deque>
#include <map>
#include <queue>
#include <functional>
#include <utility>
#include <set>


using namespace std;
/*
    2.two link listÇómerge point
*/
typedef  struct listNode LN;

struct listNode{
    int val;
    LN* next;
};

LN* mergePoint(LN* headA, LN* headB){
    int sizeA = 0, sizeB = 0;
    LN* currA = headA, *currB = headB;
    while(currA->next != NULL){
        ++sizeA;
        currA = currA->next;
    }
    while(currB->next != NULL){
        ++sizeB;
        currB = currB->next;
    }
    currA = headA;
    currB = headB;
    while(sizeA > sizeB){
        currA = currA->next;
        --sizeA;
    }
    while(sizeA < sizeB){
        currB = currB->next;
        --sizeB;
    }
    for(int i = 0; i < sizeA; ++i){
        if(currA == currB){
            return currA;
        }
        else {
            currA = currA->next;
            currB = currB->next;
        }
    }
    return NULL;
}

int main(){
    listInitial();
    return 0;
}