#include <iostream>
#include <unordered_set>
#include <vector>
#include <string>
#include <stdio.h>
#include <stdlib.h>
#include <ctype.h>

using namespace std;

/*
    quick select
    quicksort(A, lo, hi)
  if lo < hi
    p = partition(A, lo, hi)
    quicksort(A, lo, p - 1)
    quicksort(A, p + 1, hi)

partition(A, lo, hi)
    pivot = A[hi]
    i = lo //place for swapping
    for j = lo to hi - 1
        if A[j] <= pivot
            swap A[i] with A[j]
            i = i + 1
    swap A[i] with A[hi]
    return i
*/

int quickSelect(vector<int>& A, int k, int s, int e){
//    int size = (int)A.size();
    int pivot = A[e];
    int i = s;
    for(int j = s; j < e; ++j){
        if(A[j] <= pivot){
            swap(A[i], A[j]);
            ++i;
        }
    }
    swap(A[i], A[e]);
    if(i == k)
        return A[i];
    else {
        if(i < k){
            return quickSelect(A, k, i + 1, e);
        }
        else {
            return quickSelect(A, k, s, i - 1);
        }
    }
}

int main(){
    vector<int> V = {1,2,3,4,9,6,7,8,5};
    cout << quickSelect(V, 7, 0, 9) << endl;
    return 0;
}