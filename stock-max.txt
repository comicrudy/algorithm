#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <math.h> 
#include <stdio.h>
#include <limits.h>

using namespace std;

vector<int> get_vector(vector<int>& V, int N){
    string str;
    getline(cin, str);
    int size = str.size();
    int i = 0, j;
    while(i < size){
        if(i != size -1)
            j = i + 1;
        else 
            j = i;
        while(j < size){
            if(j == size -1){
                V.push_back(stoi(str.substr(i,j-i+1)));
                i = size - 1;
                break;
            }  
            else if(str[j] == ' '){
                V.push_back(stoi(str.substr(i,j-i)));
                i = j;
                break;
            }
            else {
                ++j;
            }
        }
        ++i;
    }
    if((int)V.size() != N)
        perror("size not match!!");
    return V;
}

void print_profit(vector<int>& V){
    string str;
    getline(cin, str);
    int N = stoi(str);
    V  = get_vector(V, N);
    vector<int> Sellpoint;
    long max = INT_MIN, cost = 0, shares = 0, income = 0;
    for(int i = N -1; i >= 0; --i){
        if( V[i] >= max){
            max  = V[i];
            Sellpoint.push_back(i);
        }
    }
    int size = Sellpoint.size();
    int j = size - 1;
    
// so far is good
    
    for(int i = 0; i < N; ++i){
        if(j < 0) // no more sellpoint, return
            break;
        else if(i == Sellpoint[j]){
            income = income + V[i]*shares;
            shares = 0;
            --j;
        }
        else {
            ++shares;
            cost = cost + V[i];
        }       
    }
    cout << income - cost << endl;
    V.clear();
    Sellpoint.clear();
}


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
    string s;
    getline(cin, s);
    int n = stoi(s);
    vector<int> V;
    for(int i = 0; i < n; ++i){
        print_profit(V);
    }    
    return 0;
}